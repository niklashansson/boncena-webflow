{
  "version": 3,
  "sources": ["../../../bin/live-reload.js", "../../../src/features/clearFilters/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "import type { CMSFilters } from 'src/types';\n\ndeclare global {\n  interface Window {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fsAttributes: any;\n  }\n}\n\nwindow.fsAttributes = window.fsAttributes || [];\n\nwindow.fsAttributes.push([\n  'cmsfilter',\n  (filterInstances: CMSFilters[]) => {\n    // The callback passes a `filterInstances` array with all the `CMSFilters` instances on the page.\n    const [filterInstance] = filterInstances;\n\n    const totalItemsCount = filterInstance.listInstance.items.length;\n\n    const resetButtons = filterInstance.resetButtonsData;\n\n    // The `renderitems` event runs whenever the list renders items after filtering.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    filterInstance.listInstance.on('renderitems', (renderedItems: any) => {\n      const shownItemsCount = renderedItems.length;\n\n      if (totalItemsCount === shownItemsCount) {\n        resetButtons.forEach((_, key) => {\n          key.classList.add('is-active');\n        });\n      } else {\n        resetButtons.forEach((_, key) => key.classList.remove('is-active'));\n      }\n    });\n  },\n]);\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACS7F,SAAO,eAAe,OAAO,gBAAgB,CAAC;AAE9C,SAAO,aAAa,KAAK;AAAA,IACvB;AAAA,IACA,CAAC,oBAAkC;AAEjC,YAAM,CAAC,cAAc,IAAI;AAEzB,YAAM,kBAAkB,eAAe,aAAa,MAAM;AAE1D,YAAM,eAAe,eAAe;AAIpC,qBAAe,aAAa,GAAG,eAAe,CAAC,kBAAuB;AACpE,cAAM,kBAAkB,cAAc;AAEtC,YAAI,oBAAoB,iBAAiB;AACvC,uBAAa,QAAQ,CAAC,GAAG,QAAQ;AAC/B,gBAAI,UAAU,IAAI,WAAW;AAAA,UAC/B,CAAC;AAAA,QACH,OAAO;AACL,uBAAa,QAAQ,CAAC,GAAG,QAAQ,IAAI,UAAU,OAAO,WAAW,CAAC;AAAA,QACpE;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;",
  "names": []
}
